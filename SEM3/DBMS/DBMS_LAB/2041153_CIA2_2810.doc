mysql> CREATE DATABASE GROCERY_STORE;
Query OK, 1 row affected (0.06 sec)

mysql> USE GROCERY_STORE;
Database changed
mysql> CREATE TABLE Stores(StoreId int Primary key Auto_increment, StoreName Varchar(50),Address Varchar(60) DEFAULT 'Begaluru');
Query OK, 0 rows affected (0.09 sec)

mysql> CREATE TABLE Customers(StoreId int,CustomerName Varchar(50),ContactNum bigint,LastVisitedOn Date);
Query OK, 0 rows affected (0.09 sec)

mysql> drop table stores;
Query OK, 0 rows affected (0.07 sec)

mysql> CREATE TABLE Stores(StoreId int Primary key Auto_increment, StoreName Varchar(50),OpenedOn Date,OpeningTime Time Default '8:00:00',Address Varchar(60) DEFAULT 'Bengaluru');
Query OK, 0 rows affected (0.08 sec)

mysql> CREATE TABLE Products(StoreId int,ProductId int Primary key Auto_increment, ProductName Varchar(50),PriceperPiece int, ItemsLeft int, Totalamt int);
Query OK, 0 rows affected (0.09 sec)

mysql> show tables;
+-------------------------+
| Tables_in_grocery_store |
+-------------------------+
| customers               |
| products                |
| stores                  |
+-------------------------+
3 rows in set (0.04 sec)

mysql> desc stores;
+-------------+-------------+------+-----+-----------+----------------+
| Field       | Type        | Null | Key | Default   | Extra          |
+-------------+-------------+------+-----+-----------+----------------+
| StoreId     | int         | NO   | PRI | NULL      | auto_increment |
| StoreName   | varchar(50) | YES  |     | NULL      |                |
| OpenedOn    | date        | YES  |     | NULL      |                |
| OpeningTime | time        | YES  |     | 08:00:00  |                |
| Address     | varchar(60) | YES  |     | Bengaluru |                |
+-------------+-------------+------+-----+-----------+----------------+
5 rows in set (0.04 sec)

mysql> desc customers;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| StoreId       | int         | YES  |     | NULL    |       |
| CustomerName  | varchar(50) | YES  |     | NULL    |       |
| ContactNum    | bigint      | YES  |     | NULL    |       |
| LastVisitedOn | date        | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> desc products;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| StoreId       | int         | YES  |     | NULL    |                |
| ProductId     | int         | NO   | PRI | NULL    | auto_increment |
| ProductName   | varchar(50) | YES  |     | NULL    |                |
| PriceperPiece | int         | YES  |     | NULL    |                |
| ItemsLeft     | int         | YES  |     | NULL    |                |
| Totalamt      | int         | YES  |     | NULL    |                |
+---------------+-------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

mysql> INSERT INTO STORES VALUES
    -> ^C
mysql> INSERT INTO STORES(StoreId,StoreName,OpenedOn,OpeningTime) VALUES
    -> (1,'Fresh Mart',MAKEDATE(2010,173),'8:00:00'),
    -> (2,'Food Festive',MAKEDATE(2012,45),MAKETIME(8,30,00)),
    -> (3,'Rancher's Grocery',ADDDATE(MAKEDATE(2018,69),+23),MAKETIME(9,00,00)),
    '> (11,'Dollar Pantry',SUBDATE(MAKEDATE(2011,111),80),MAKETIME(9,00,00)),
    '> (12,'Quick Fare Foods',MAKEDATE(2011,111),ADDTIME(MAKETIME(21,00,00),'12:00:00)),
    -> (13,'Exotic Eats',MAKEDATE(2019,59),SUBTIME(MAKETIME(21,00,00),'12:00:00));
    '> ^C
mysql> INSERT INTO STORES(StoreId,StoreName,OpenedOn,OpeningTime) VALUES
    -> (1,'Fresh Mart',MAKEDATE(2010,173),'8:00:00'),
    -> (2,'Food Festive',MAKEDATE(2012,45),MAKETIME(8,30,00)),
    -> (3,'Rancher's Grocery',ADDDATE(MAKEDATE(2018,69),+23),MAKETIME(9,00,00)),
    '> (11,'Dollar Pantry',SUBDATE(MAKEDATE(2011,111),80),MAKETIME(9,00,00)),
    '> (12,'Quick Fare Foods',MAKEDATE(2011,111),ADDTIME(MAKETIME(21,00,00),'12:00:00')),
    '> (13,'Exotic Eats',MAKEDATE(2019,59),SUBTIME(MAKETIME(21,00,00),'12:00:00'));
    '> ^C
mysql> INSERT INTO STORES(StoreId,StoreName,OpenedOn,OpeningTime) VALUES
    -> (1,'Fresh Mart',MAKEDATE(2010,173),'8:00:00');
Query OK, 1 row affected (0.04 sec)

mysql> INSERT INTO STORES(StoreId,StoreName,OpenedOn,OpeningTime) VALUES
    -> (2,'Food Festive',MAKEDATE(2012,45),MAKETIME(8,30,00));
Query OK, 1 row affected (0.05 sec)

mysql> INSERT INTO STORES(StoreId,StoreName,OpenedOn,OpeningTime) VALUES
    -> (3,'Rancher's Grocery',ADDDATE(MAKEDATE(2018,69),+23),MAKETIME(9,00,00));
    '> ^C
mysql> INSERT INTO STORES(StoreId,StoreName,OpenedOn,OpeningTime) VALUES
    -> (3,"RancherGrocery",ADDDATE(MAKEDATE(2018,69),+23),MAKETIME(9,00,00));
Query OK, 1 row affected (0.04 sec)

mysql> INSERT INTO STORES(StoreId,StoreName,OpenedOn,OpeningTime) VALUES
    -> (11,'Dollar Pantry',SUBDATE(MAKEDATE(2011,111),80),MAKETIME(9,00,00)),
    -> (12,'Quick Fare Foods',MAKEDATE(2011,111),ADDTIME(MAKETIME(21,00,00),'12:00:00')),
    -> (13,'Exotic Eats',MAKEDATE(2019,59),SUBTIME(MAKETIME(21,00,00),'12:00:00'));
Query OK, 3 rows affected (0.05 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO CUSTOMERS VALUES
    -> (1,'Ron',9812564820,MAKEDATE(2020,123));
Query OK, 1 row affected (0.04 sec)

mysql> INSERT INTO CUSTOMERS VALUES
    -> (2,'Sarah',9536238700,MAKEDATE(2021,145)),
    -> ^C
mysql> ALTER TABLE CUSTOMERS ADD COLUMN CustomerId int Primary Key;
Query OK, 0 rows affected (0.14 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> UPDATE TABLE CUSTOMERS SET CustomerId=1001 WHERE STOREID=1;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'TABLE CUSTOMERS SET CustomerId=1001 WHERE STOREID=1' at line 1
mysql> UPDATE CUSTOMERS SET CustomerId=1001 WHERE STOREID=1;
Query OK, 1 row affected (0.04 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> INSERT INTO CUSTOMERS VALUES
    -> (2,2002,'Sarah',9536238700,MAKEDATE(2021,145)),
    -> (3,3003,'Edward',9846412452,MAKEDATE(2021,12)),
    -> (4,4004,'Bob',912309845,CURDATE()),
    -> (5,5005,'Rex',9213478629,CURDATE());
ERROR 1366 (HY000): Incorrect integer value: 'Sarah' for column 'ContactNum' at row 1
mysql> INSERT INTO CUSTOMERS VALUES
    -> ^C
mysql> alter table CUSTOMERS modify column CustomerId int after StoreId int;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int' at line 1
mysql> alter table CUSTOMERS modify column CustomerId int after StoreId;
Query OK, 0 rows affected (0.17 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> INSERT INTO CUSTOMERS VALUES
    -> (2,2002,'Sarah',9536238700,MAKEDATE(2021,145)),
    -> (3,3003,'Edward',9846412452,MAKEDATE(2021,12)),
    -> (4,4004,'Bob',912309845,CURDATE()),
    -> (5,5005,'Rex',9213478629,CURDATE());
Query OK, 4 rows affected (0.04 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> INSERT INTO PRODUCTS VALUES
    -> (1,11,Fruits,20,32,Priceperpiece*ItemsLeft);
ERROR 1054 (42S22): Unknown column 'Fruits' in 'field list'
mysql> INSERT INTO PRODUCTS VALUES
    -> (1,11,'Fruits',20,32,Priceperpiece*ItemsLeft);
Query OK, 1 row affected (0.02 sec)

mysql> INSERT INTO PRODUCTS VALUES
    -> (2,22,Vegetable,30,50,Priceperpiece*ItemsLeft);
ERROR 1054 (42S22): Unknown column 'Vegetable' in 'field list'
mysql> INSERT INTO PRODUCTS VALUES
    -> (2,22,'Vegetable',30,50,Priceperpiece*ItemsLeft),
    -> (3,33,'Juice',80,20,Priceperpiece*ItemsLeft),
    -> (8,88,'Bread',45,10,Priceperpiece*ItemsLeft),
    -> (9,99,'Butter',55,15,Priceperpiece*ItemsLeft),
    -> (7,77,'Mayo',80,5,Priceperpiece*ItemsLeft);
Query OK, 5 rows affected (0.06 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> desc stores;
+-------------+-------------+------+-----+-----------+----------------+
| Field       | Type        | Null | Key | Default   | Extra          |
+-------------+-------------+------+-----+-----------+----------------+
| StoreId     | int         | NO   | PRI | NULL      | auto_increment |
| StoreName   | varchar(50) | YES  |     | NULL      |                |
| OpenedOn    | date        | YES  |     | NULL      |                |
| OpeningTime | time        | YES  |     | 08:00:00  |                |
| Address     | varchar(60) | YES  |     | Bengaluru |                |
+-------------+-------------+------+-----+-----------+----------------+
5 rows in set (0.03 sec)

mysql> select * From stores;
+---------+------------------+------------+-------------+-----------+
| StoreId | StoreName        | OpenedOn   | OpeningTime | Address   |
+---------+------------------+------------+-------------+-----------+
|       1 | Fresh Mart       | 2010-06-22 | 08:00:00    | Bengaluru |
|       2 | Food Festive     | 2012-02-14 | 08:30:00    | Bengaluru |
|       3 | RancherGrocery   | 2018-04-02 | 09:00:00    | Bengaluru |
|      11 | Dollar Pantry    | 2011-01-31 | 09:00:00    | Bengaluru |
|      12 | Quick Fare Foods | 2011-04-21 | 33:00:00    | Bengaluru |
|      13 | Exotic Eats      | 2019-02-28 | 09:00:00    | Bengaluru |
+---------+------------------+------------+-------------+-----------+
6 rows in set (0.00 sec)

mysql> desc customers;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| StoreId       | int         | YES  |     | NULL    |       |
| CustomerId    | int         | NO   | PRI | NULL    |       |
| CustomerName  | varchar(50) | YES  |     | NULL    |       |
| ContactNum    | bigint      | YES  |     | NULL    |       |
| LastVisitedOn | date        | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
5 rows in set (0.00 sec)

mysql> select * From customers;
+---------+------------+--------------+------------+---------------+
| StoreId | CustomerId | CustomerName | ContactNum | LastVisitedOn |
+---------+------------+--------------+------------+---------------+
|       1 |       1001 | Ron          | 9812564820 | 2020-05-02    |
|       2 |       2002 | Sarah        | 9536238700 | 2021-05-25    |
|       3 |       3003 | Edward       | 9846412452 | 2021-01-12    |
|       4 |       4004 | Bob          |  912309845 | 2021-10-28    |
|       5 |       5005 | Rex          | 9213478629 | 2021-10-28    |
+---------+------------+--------------+------------+---------------+
5 rows in set (0.05 sec)

mysql> desc products;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| StoreId       | int         | YES  |     | NULL    |                |
| ProductId     | int         | NO   | PRI | NULL    | auto_increment |
| ProductName   | varchar(50) | YES  |     | NULL    |                |
| PriceperPiece | int         | YES  |     | NULL    |                |
| ItemsLeft     | int         | YES  |     | NULL    |                |
| Totalamt      | int         | YES  |     | NULL    |                |
+---------------+-------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

mysql> select * From products;
+---------+-----------+-------------+---------------+-----------+----------+
| StoreId | ProductId | ProductName | PriceperPiece | ItemsLeft | Totalamt |
+---------+-----------+-------------+---------------+-----------+----------+
|       1 |        11 | Fruits      |            20 |        32 |      640 |
|       2 |        22 | Vegetable   |            30 |        50 |     1500 |
|       3 |        33 | Juice       |            80 |        20 |     1600 |
|       7 |        77 | Mayo        |            80 |         5 |      400 |
|       8 |        88 | Bread       |            45 |        10 |      450 |
|       9 |        99 | Butter      |            55 |        15 |      825 |
+---------+-----------+-------------+---------------+-----------+----------+
6 rows in set (0.00 sec)

mysql> #CONVERSION FUNCTION
mysql> SELECT StoreId,ProductId,ProductName,CONVERT(PriceperPiece,DECIMAL(3,1)) as Price_per_Piece ,ItemsLeft,CAST(TotalAmt AS Decimal(5,2)) as Total_Amount FROM PRODUCTS;
+---------+-----------+-------------+-----------------+-----------+--------------+
| StoreId | ProductId | ProductName | Price_per_Piece | ItemsLeft | Total_Amount |
+---------+-----------+-------------+-----------------+-----------+--------------+
|       1 |        11 | Fruits      |            20.0 |        32 |       640.00 |
|       2 |        22 | Vegetable   |            30.0 |        50 |       999.99 |
|       3 |        33 | Juice       |            80.0 |        20 |       999.99 |
|       7 |        77 | Mayo        |            80.0 |         5 |       400.00 |
|       8 |        88 | Bread       |            45.0 |        10 |       450.00 |
|       9 |        99 | Butter      |            55.0 |        15 |       825.00 |
+---------+-----------+-------------+-----------------+-----------+--------------+
6 rows in set, 2 warnings (0.04 sec)

mysql> SELECT StoreId,ProductId,ProductName,CONVERT(PriceperPiece,DECIMAL(3,1)) as Price_per_Piece ,ItemsLeft,CAST(TotalAmt AS Decimal(6,2)) as Total_Amount FROM PRODUCTS;
+---------+-----------+-------------+-----------------+-----------+--------------+
| StoreId | ProductId | ProductName | Price_per_Piece | ItemsLeft | Total_Amount |
+---------+-----------+-------------+-----------------+-----------+--------------+
|       1 |        11 | Fruits      |            20.0 |        32 |       640.00 |
|       2 |        22 | Vegetable   |            30.0 |        50 |      1500.00 |
|       3 |        33 | Juice       |            80.0 |        20 |      1600.00 |
|       7 |        77 | Mayo        |            80.0 |         5 |       400.00 |
|       8 |        88 | Bread       |            45.0 |        10 |       450.00 |
|       9 |        99 | Butter      |            55.0 |        15 |       825.00 |
+---------+-----------+-------------+-----------------+-----------+--------------+
6 rows in set (0.00 sec)

mysql> #STRING PADDING
mysql> SELECT StoreId,CustomerId,RPAD(CustomerName,20,':') AS Padded_Names,ContactNum FROM CUSTOMERS;
+---------+------------+----------------------+------------+
| StoreId | CustomerId | Padded_Names         | ContactNum |
+---------+------------+----------------------+------------+
|       1 |       1001 | Ron::::::::::::::::: | 9812564820 |
|       2 |       2002 | Sarah::::::::::::::: | 9536238700 |
|       3 |       3003 | Edward:::::::::::::: | 9846412452 |
|       4 |       4004 | Bob::::::::::::::::: |  912309845 |
|       5 |       5005 | Rex::::::::::::::::: | 9213478629 |
+---------+------------+----------------------+------------+
5 rows in set (0.00 sec)

mysql> SELECT StoreId,CustomerId,LPAD(CustomerName,20,':') AS Padded_Names,ContactNum FROM CUSTOMERS;
+---------+------------+----------------------+------------+
| StoreId | CustomerId | Padded_Names         | ContactNum |
+---------+------------+----------------------+------------+
|       1 |       1001 | :::::::::::::::::Ron | 9812564820 |
|       2 |       2002 | :::::::::::::::Sarah | 9536238700 |
|       3 |       3003 | ::::::::::::::Edward | 9846412452 |
|       4 |       4004 | :::::::::::::::::Bob |  912309845 |
|       5 |       5005 | :::::::::::::::::Rex | 9213478629 |
+---------+------------+----------------------+------------+
5 rows in set (0.00 sec)

mysql> #STRING REPLACE
mysql> SELECT StoreId,ProductId,ProductName,REPLACE(PriceperPiece,0,1) as Price_per_Piece ,ItemsLeft,TotalAmt as Total_Amount FROM PRODUCTS;
+---------+-----------+-------------+-----------------+-----------+--------------+
| StoreId | ProductId | ProductName | Price_per_Piece | ItemsLeft | Total_Amount |
+---------+-----------+-------------+-----------------+-----------+--------------+
|       1 |        11 | Fruits      | 21              |        32 |          640 |
|       2 |        22 | Vegetable   | 31              |        50 |         1500 |
|       3 |        33 | Juice       | 81              |        20 |         1600 |
|       7 |        77 | Mayo        | 81              |         5 |          400 |
|       8 |        88 | Bread       | 45              |        10 |          450 |
|       9 |        99 | Butter      | 55              |        15 |          825 |
+---------+-----------+-------------+-----------------+-----------+--------------+
6 rows in set (0.00 sec)

mysql> select * From products;
+---------+-----------+-------------+---------------+-----------+----------+
| StoreId | ProductId | ProductName | PriceperPiece | ItemsLeft | Totalamt |
+---------+-----------+-------------+---------------+-----------+----------+
|       1 |        11 | Fruits      |            20 |        32 |      640 |
|       2 |        22 | Vegetable   |            30 |        50 |     1500 |
|       3 |        33 | Juice       |            80 |        20 |     1600 |
|       7 |        77 | Mayo        |            80 |         5 |      400 |
|       8 |        88 | Bread       |            45 |        10 |      450 |
|       9 |        99 | Butter      |            55 |        15 |      825 |
+---------+-----------+-------------+---------------+-----------+----------+
6 rows in set (0.00 sec)

mysql> SELECT StoreId,ProductId,ProductName,RTRIM(REPLACE(PriceperPiece,0,1)) as Price_per_Piece ,ItemsLeft,TotalAmt as Total_Amount FROM PRODUCTS;
+---------+-----------+-------------+-----------------+-----------+--------------+
| StoreId | ProductId | ProductName | Price_per_Piece | ItemsLeft | Total_Amount |
+---------+-----------+-------------+-----------------+-----------+--------------+
|       1 |        11 | Fruits      | 21              |        32 |          640 |
|       2 |        22 | Vegetable   | 31              |        50 |         1500 |
|       3 |        33 | Juice       | 81              |        20 |         1600 |
|       7 |        77 | Mayo        | 81              |         5 |          400 |
|       8 |        88 | Bread       | 45              |        10 |          450 |
|       9 |        99 | Butter      | 55              |        15 |          825 |
+---------+-----------+-------------+-----------------+-----------+--------------+
6 rows in set (0.00 sec)

mysql> SELECT StoreId,ProductId,ProductName,LPAD(REPLACE(PriceperPiece,0,1),12,' ') as Price_per_Piece ,ItemsLeft,TotalAmt as Total_Amount FROM PRODUCTS;
+---------+-----------+-------------+-----------------+-----------+--------------+
| StoreId | ProductId | ProductName | Price_per_Piece | ItemsLeft | Total_Amount |
+---------+-----------+-------------+-----------------+-----------+--------------+
|       1 |        11 | Fruits      |           21    |        32 |          640 |
|       2 |        22 | Vegetable   |           31    |        50 |         1500 |
|       3 |        33 | Juice       |           81    |        20 |         1600 |
|       7 |        77 | Mayo        |           81    |         5 |          400 |
|       8 |        88 | Bread       |           45    |        10 |          450 |
|       9 |        99 | Butter      |           55    |        15 |          825 |
+---------+-----------+-------------+-----------------+-----------+--------------+
6 rows in set (0.00 sec)

mysql> #JOIN
mysql> SELECT * FROM STORES;
+---------+------------------+------------+-------------+-----------+
| StoreId | StoreName        | OpenedOn   | OpeningTime | Address   |
+---------+------------------+------------+-------------+-----------+
|       1 | Fresh Mart       | 2010-06-22 | 08:00:00    | Bengaluru |
|       2 | Food Festive     | 2012-02-14 | 08:30:00    | Bengaluru |
|       3 | RancherGrocery   | 2018-04-02 | 09:00:00    | Bengaluru |
|      11 | Dollar Pantry    | 2011-01-31 | 09:00:00    | Bengaluru |
|      12 | Quick Fare Foods | 2011-04-21 | 33:00:00    | Bengaluru |
|      13 | Exotic Eats      | 2019-02-28 | 09:00:00    | Bengaluru |
+---------+------------------+------------+-------------+-----------+
6 rows in set (0.00 sec)

mysql> SELECT * FROM CUSTOMERS;
+---------+------------+--------------+------------+---------------+
| StoreId | CustomerId | CustomerName | ContactNum | LastVisitedOn |
+---------+------------+--------------+------------+---------------+
|       1 |       1001 | Ron          | 9812564820 | 2020-05-02    |
|       2 |       2002 | Sarah        | 9536238700 | 2021-05-25    |
|       3 |       3003 | Edward       | 9846412452 | 2021-01-12    |
|       4 |       4004 | Bob          |  912309845 | 2021-10-28    |
|       5 |       5005 | Rex          | 9213478629 | 2021-10-28    |
+---------+------------+--------------+------------+---------------+
5 rows in set (0.00 sec)

mysql> SELECT * FROM PRODUCTS;
+---------+-----------+-------------+---------------+-----------+----------+
| StoreId | ProductId | ProductName | PriceperPiece | ItemsLeft | Totalamt |
+---------+-----------+-------------+---------------+-----------+----------+
|       1 |        11 | Fruits      |            20 |        32 |      640 |
|       2 |        22 | Vegetable   |            30 |        50 |     1500 |
|       3 |        33 | Juice       |            80 |        20 |     1600 |
|       7 |        77 | Mayo        |            80 |         5 |      400 |
|       8 |        88 | Bread       |            45 |        10 |      450 |
|       9 |        99 | Butter      |            55 |        15 |      825 |
+---------+-----------+-------------+---------------+-----------+----------+
6 rows in set (0.00 sec)

mysql> SELECT * FROM STORES NATURAL JOIN PRODUCTS;
+---------+----------------+------------+-------------+-----------+-----------+-------------+---------------+-----------+----------+
| StoreId | StoreName      | OpenedOn   | OpeningTime | Address   | ProductId | ProductName | PriceperPiece | ItemsLeft | Totalamt |
+---------+----------------+------------+-------------+-----------+-----------+-------------+---------------+-----------+----------+
|       1 | Fresh Mart     | 2010-06-22 | 08:00:00    | Bengaluru |        11 | Fruits      |            20 |        32 |      640 |
|       2 | Food Festive   | 2012-02-14 | 08:30:00    | Bengaluru |        22 | Vegetable   |            30 |        50 |     1500 |
|       3 | RancherGrocery | 2018-04-02 | 09:00:00    | Bengaluru |        33 | Juice       |            80 |        20 |     1600 |
+---------+----------------+------------+-------------+-----------+-----------+-------------+---------------+-----------+----------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM STORES INNER JOIN PRODUCTS ON STORES.StoreId=CUSTOMERS.StoreId;
ERROR 1054 (42S22): Unknown column 'CUSTOMERS.StoreId' in 'on clause'
mysql> SELECT * FROM STORES INNER JOIN CUSTOMERS ON STORES.StoreId=CUSTOMERS.StoreId;
+---------+----------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
| StoreId | StoreName      | OpenedOn   | OpeningTime | Address   | StoreId | CustomerId | CustomerName | ContactNum | LastVisitedOn |
+---------+----------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
|       1 | Fresh Mart     | 2010-06-22 | 08:00:00    | Bengaluru |       1 |       1001 | Ron          | 9812564820 | 2020-05-02    |
|       2 | Food Festive   | 2012-02-14 | 08:30:00    | Bengaluru |       2 |       2002 | Sarah        | 9536238700 | 2021-05-25    |
|       3 | RancherGrocery | 2018-04-02 | 09:00:00    | Bengaluru |       3 |       3003 | Edward       | 9846412452 | 2021-01-12    |
+---------+----------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
3 rows in set (0.00 sec)

mysql> #OUTER JOIN
mysql> #LEFT JOIN
mysql> SELECT * FROM STORES LEFT JOIN PRODUCTS ON STORES.StoreId=CUSTOMERS.StoreId;
ERROR 1054 (42S22): Unknown column 'CUSTOMERS.StoreId' in 'on clause'
mysql> SELECT * FROM STORES LEFT JOIN CUTOMERS ON STORES.StoreId=CUSTOMERS.StoreId;
ERROR 1146 (42S02): Table 'grocery_store.cutomers' doesn't exist
mysql> SELECT * FROM STORES LEFT JOIN CUSTOMERS ON STORES.StoreId=CUSTOMERS.StoreId;
+---------+------------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
| StoreId | StoreName        | OpenedOn   | OpeningTime | Address   | StoreId | CustomerId | CustomerName | ContactNum | LastVisitedOn |
+---------+------------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
|       1 | Fresh Mart       | 2010-06-22 | 08:00:00    | Bengaluru |       1 |       1001 | Ron          | 9812564820 | 2020-05-02    |
|       2 | Food Festive     | 2012-02-14 | 08:30:00    | Bengaluru |       2 |       2002 | Sarah        | 9536238700 | 2021-05-25    |
|       3 | RancherGrocery   | 2018-04-02 | 09:00:00    | Bengaluru |       3 |       3003 | Edward       | 9846412452 | 2021-01-12    |
|      11 | Dollar Pantry    | 2011-01-31 | 09:00:00    | Bengaluru |    NULL |       NULL | NULL         |       NULL | NULL          |
|      12 | Quick Fare Foods | 2011-04-21 | 33:00:00    | Bengaluru |    NULL |       NULL | NULL         |       NULL | NULL          |
|      13 | Exotic Eats      | 2019-02-28 | 09:00:00    | Bengaluru |    NULL |       NULL | NULL         |       NULL | NULL          |
+---------+------------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
6 rows in set (0.00 sec)

mysql> #RIGHT JOIN
mysql> SELECT * FROM STORES RIGHT JOIN CUSTOMERS ON STORES.StoreId=CUSTOMERS.StoreId;
+---------+----------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
| StoreId | StoreName      | OpenedOn   | OpeningTime | Address   | StoreId | CustomerId | CustomerName | ContactNum | LastVisitedOn |
+---------+----------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
|       1 | Fresh Mart     | 2010-06-22 | 08:00:00    | Bengaluru |       1 |       1001 | Ron          | 9812564820 | 2020-05-02    |
|       2 | Food Festive   | 2012-02-14 | 08:30:00    | Bengaluru |       2 |       2002 | Sarah        | 9536238700 | 2021-05-25    |
|       3 | RancherGrocery | 2018-04-02 | 09:00:00    | Bengaluru |       3 |       3003 | Edward       | 9846412452 | 2021-01-12    |
|    NULL | NULL           | NULL       | NULL        | NULL      |       4 |       4004 | Bob          |  912309845 | 2021-10-28    |
|    NULL | NULL           | NULL       | NULL        | NULL      |       5 |       5005 | Rex          | 9213478629 | 2021-10-28    |
+---------+----------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
5 rows in set (0.00 sec)

mysql> #FULL JOIN
mysql> SELECT * FROM STORES LEFT JOIN CUSTOMERS ON STORES.StoreId=CUSTOMERS.StoreId
    -> UNION
    -> SELECT * FROM STORES RIGHT JOIN CUSTOMERS ON STORES.StoreId=CUSTOMERS.StoreId;
+---------+------------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
| StoreId | StoreName        | OpenedOn   | OpeningTime | Address   | StoreId | CustomerId | CustomerName | ContactNum | LastVisitedOn |
+---------+------------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
|       1 | Fresh Mart       | 2010-06-22 | 08:00:00    | Bengaluru |       1 |       1001 | Ron          | 9812564820 | 2020-05-02    |
|       2 | Food Festive     | 2012-02-14 | 08:30:00    | Bengaluru |       2 |       2002 | Sarah        | 9536238700 | 2021-05-25    |
|       3 | RancherGrocery   | 2018-04-02 | 09:00:00    | Bengaluru |       3 |       3003 | Edward       | 9846412452 | 2021-01-12    |
|      11 | Dollar Pantry    | 2011-01-31 | 09:00:00    | Bengaluru |    NULL |       NULL | NULL         |       NULL | NULL          |
|      12 | Quick Fare Foods | 2011-04-21 | 33:00:00    | Bengaluru |    NULL |       NULL | NULL         |       NULL | NULL          |
|      13 | Exotic Eats      | 2019-02-28 | 09:00:00    | Bengaluru |    NULL |       NULL | NULL         |       NULL | NULL          |
|    NULL | NULL             | NULL       | NULL        | NULL      |       4 |       4004 | Bob          |  912309845 | 2021-10-28    |
|    NULL | NULL             | NULL       | NULL        | NULL      |       5 |       5005 | Rex          | 9213478629 | 2021-10-28    |
+---------+------------------+------------+-------------+-----------+---------+------------+--------------+------------+---------------+
8 rows in set (0.02 sec)

mysql> #SELF JOIN
mysql> SELECT p1.ProductId, p2.ProductName FROM PRODUCTS p1, PRODUCTS p2;
+-----------+-------------+
| ProductId | ProductName |
+-----------+-------------+
|        99 | Fruits      |
|        88 | Fruits      |
|        77 | Fruits      |
|        33 | Fruits      |
|        22 | Fruits      |
|        11 | Fruits      |
|        99 | Vegetable   |
|        88 | Vegetable   |
|        77 | Vegetable   |
|        33 | Vegetable   |
|        22 | Vegetable   |
|        11 | Vegetable   |
|        99 | Juice       |
|        88 | Juice       |
|        77 | Juice       |
|        33 | Juice       |
|        22 | Juice       |
|        11 | Juice       |
|        99 | Mayo        |
|        88 | Mayo        |
|        77 | Mayo        |
|        33 | Mayo        |
|        22 | Mayo        |
|        11 | Mayo        |
|        99 | Bread       |
|        88 | Bread       |
|        77 | Bread       |
|        33 | Bread       |
|        22 | Bread       |
|        11 | Bread       |
|        99 | Butter      |
|        88 | Butter      |
|        77 | Butter      |
|        33 | Butter      |
|        22 | Butter      |
|        11 | Butter      |
+-----------+-------------+
36 rows in set (0.00 sec)

mysql> SELECT p1.ProductId, p2.ProductName FROM PRODUCTS p1, PRODUCTS p2 WHERE p1.ProductId=p2.ProductId;
+-----------+-------------+
| ProductId | ProductName |
+-----------+-------------+
|        11 | Fruits      |
|        22 | Vegetable   |
|        33 | Juice       |
|        77 | Mayo        |
|        88 | Bread       |
|        99 | Butter      |
+-----------+-------------+
6 rows in set (0.00 sec)

mysql> ALTER TABLE CUSTOMER ADD COLUMN MoneySpent int;
ERROR 1146 (42S02): Table 'grocery_store.customer' doesn't exist
mysql> ALTER TABLE CUSTOMERS ADD COLUMN MoneySpent int;
Query OK, 0 rows affected (0.08 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ^C
mysql> UPDATE CUSTOMERS SET MONEYSPENT = 12000 WHERE STOREID=1;
Query OK, 1 row affected (0.04 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> UPDATE CUSTOMERS SET MONEYSPENT = 15609 WHERE STOREID=2;
Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> UPDATE CUSTOMERS SET MONEYSPENT = 14500 WHERE STOREID=3;
Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> UPDATE CUSTOMERS SET MONEYSPENT = 11110 WHERE STOREID=4;
Query OK, 1 row affected (0.03 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> UPDATE CUSTOMERS SET MONEYSPENT = 13908 WHERE STOREID=5;
Query OK, 1 row affected (0.06 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql>  INSERT INTO CUSTOMERS VALUES
    -> (1,1002,'Jake',9326238700,MAKEDATE(2021,145),1690),
    -> (1,1003,'Belle',9326238123,MAKEDATE(2021,11),16890);
Query OK, 2 rows affected (0.03 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM CUSTOMERS;
+---------+------------+--------------+------------+---------------+------------+
| StoreId | CustomerId | CustomerName | ContactNum | LastVisitedOn | MoneySpent |
+---------+------------+--------------+------------+---------------+------------+
|       1 |       1001 | Ron          | 9812564820 | 2020-05-02    |      12000 |
|       1 |       1002 | Jake         | 9326238700 | 2021-05-25    |       1690 |
|       1 |       1003 | Belle        | 9326238123 | 2021-01-11    |      16890 |
|       2 |       2002 | Sarah        | 9536238700 | 2021-05-25    |      15609 |
|       3 |       3003 | Edward       | 9846412452 | 2021-01-12    |      14500 |
|       4 |       4004 | Bob          |  912309845 | 2021-10-28    |      11110 |
|       5 |       5005 | Rex          | 9213478629 | 2021-10-28    |      13908 |
+---------+------------+--------------+------------+---------------+------------+
7 rows in set (0.03 sec)

mysql> #GROUP BY
mysql> SELECT StoreId,SUM(MoneySpent) FROM CUSTOMERS;
+---------+-----------------+
| StoreId | SUM(MoneySpent) |
+---------+-----------------+
|       1 |           85707 |
+---------+-----------------+
1 row in set (0.00 sec)

mysql> SELECT StoreId,SUM(MoneySpent) FROM CUSTOMERS GROUP BY StoreId;
+---------+-----------------+
| StoreId | SUM(MoneySpent) |
+---------+-----------------+
|       1 |           30580 |
|       2 |           15609 |
|       3 |           14500 |
|       4 |           11110 |
|       5 |           13908 |
+---------+-----------------+
5 rows in set (0.04 sec)

mysql> #USE OF GROUP BY
mysql> #THE GROUP BY STATEMENT IN SQL IS USED TO ARRANGE IDENTICAL DATA INTO GROUPS WITH THE HELP OF SOME FUNCTIONS,ie,IF A PARTICULAR COLUMN HAS THE SAME VALUES IN DIFFERENT ROWS THEN IT WILL ARRANGE THESE ROWS IN A GROUP
mysql> #HERE WE CAN SEE THAT WHEN SUM IS USED WITHOUT GROUP BY THE TOTAL SUM IS GIVEN WITH THE FIRST ENTRY IN THE SROREID COLUMN WHEREAS WE WANTED THE TOTAL AMOUNT OF MONEY SPENT IN EACH STORE
mysql> #USE OF HAVING CLAUSE
mysql> #WHERE CLAUSE IS USED TO FILTER THE RECORDS FROM THE TABLE BASED ON THE SPECIFIED CONDITION. HAVING CLAUSE IS USED TO FILTER RECORDS FROM THE GROUPS BASED ON THE SPECIFIED CONDITION.
mysql> 
mysql> #GROUPBY WITH HAVING CLAUSE
mysql> SELECT StoreId,SUM(MoneySpent) FROM CUSTOMERS GROUP BY StoreId HAVING SUM(MoneySpent)>15000;
+---------+-----------------+
| StoreId | SUM(MoneySpent) |
+---------+-----------------+
|       1 |           30580 |
|       2 |           15609 |
+---------+-----------------+
2 rows in set (0.03 sec)

mysql> notee;
